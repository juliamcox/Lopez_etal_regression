function modelStats_real = getPvals(modelStats_real,modelStats_shuff,eventNames)

%% Calculate p-values for f-statistic and correlation coefficient by comparing to null distribution generated by circularly shifting the data

%%% find p-values for correlation coefficients
% full model
corr_shuff = cellfun(@(x) x.corr.full,modelStats_shuff);
pvals.corr.full = mean(abs(modelStats_real.corr.full) <= abs(corr_shuff));

for ne = 1:numel(eventNames)
    thisReal         = eval(sprintf('modelStats_real.corr.%s',eventNames{ne}));
    thisReal_noRefit = eval(sprintf('modelStats_real.corr_noRefit.%s',eventNames{ne}));
    eval(sprintf('corr_shuff = cellfun(@(x) x.corr.%s,modelStats_shuff);',eventNames{ne}));
    eval(sprintf('corr_shuff_noRefit = cellfun(@(x) x.corr_noRefit.%s,modelStats_shuff);',eventNames{ne}));
    eval(sprintf('pvals.corr.%s = mean(abs(thisReal) <= abs(corr_shuff));',eventNames{ne}));
    eval(sprintf('pvals.corr_noRefit.%s = mean(abs(thisReal_noRefit) <= abs(corr_shuff_noRefit));',eventNames{ne}));
end

%%% Find p-values for F-statistics if relevant

if isfield(modelStats_real,'Fstat')
    for ne = 1:numel(eventNames)
        thisReal         = eval(sprintf('modelStats_real.Fstat.%s',eventNames{ne}));
        thisReal_noRefit = eval(sprintf('modelStats_real.Fstat_noRefit.%s',eventNames{ne}));
        eval(sprintf('F_shuff = cellfun(@(x) x.Fstat.%s,modelStats_shuff);',eventNames{ne}));
        eval(sprintf('F_shuff_noRefit = cellfun(@(x) x.Fstat_noRefit.%s,modelStats_shuff);',eventNames{ne}));
        eval(sprintf('pvals.Fstat.%s = mean(thisReal <= F_shuff);',eventNames{ne}));
        eval(sprintf('pvals.Fstat_noRefit.%s = mean(thisReal_noRefit <= F_shuff_noRefit);',eventNames{ne}));
    end

end

modelStats_real.pvals = pvals;
